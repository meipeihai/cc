<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.cc.mapper.SessionMapper" >
  <resultMap id="BaseResultMap" type="com.example.cc.pojo.Session" >
    <id column="session_id" property="sessionId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="to_user_id" property="toUserId" jdbcType="INTEGER" />
    <result column="list_name" property="listName" jdbcType="VARCHAR" />
    <result column="un_read_count" property="unReadCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    session_id, user_id, to_user_id, list_name, un_read_count
  </sql>
  <select id="selectByUserId" resultMap="BaseResultMap">
    SELECT
        <include refid="Base_Column_List"></include>
        FROM session WHERE user_id = #{id}
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.cc.pojo.SessionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from session
    where session_id = #{sessionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from session
    where session_id = #{sessionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.cc.pojo.SessionExample" >
    delete from session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.cc.pojo.Session" >
    insert into session (session_id, user_id, to_user_id, 
      list_name, un_read_count)
    values (#{sessionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, 
      #{listName,jdbcType=VARCHAR}, #{unReadCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.cc.pojo.Session" >
    insert into session
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sessionId != null" >
        session_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="listName != null" >
        list_name,
      </if>
      <if test="unReadCount != null" >
        un_read_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sessionId != null" >
        #{sessionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="listName != null" >
        #{listName,jdbcType=VARCHAR},
      </if>
      <if test="unReadCount != null" >
        #{unReadCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.cc.pojo.SessionExample" resultType="java.lang.Integer" >
    select count(*) from session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update session
    <set >
      <if test="record.sessionId != null" >
        session_id = #{record.sessionId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.toUserId != null" >
        to_user_id = #{record.toUserId,jdbcType=INTEGER},
      </if>
      <if test="record.listName != null" >
        list_name = #{record.listName,jdbcType=VARCHAR},
      </if>
      <if test="record.unReadCount != null" >
        un_read_count = #{record.unReadCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update session
    set session_id = #{record.sessionId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      to_user_id = #{record.toUserId,jdbcType=INTEGER},
      list_name = #{record.listName,jdbcType=VARCHAR},
      un_read_count = #{record.unReadCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.cc.pojo.Session" >
    update session
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="listName != null" >
        list_name = #{listName,jdbcType=VARCHAR},
      </if>
      <if test="unReadCount != null" >
        un_read_count = #{unReadCount,jdbcType=INTEGER},
      </if>
    </set>
    where session_id = #{sessionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.cc.pojo.Session" >
    update session
    set user_id = #{userId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      list_name = #{listName,jdbcType=VARCHAR},
      un_read_count = #{unReadCount,jdbcType=INTEGER}
    where session_id = #{sessionId,jdbcType=INTEGER}
  </update>
  <update id="addUnReadCount">
    UPDATE session SET un_read_count = un_read_count + 1 WHERE user_id = #{userId} AND to_user_id = #{toUserId}
  </update>

  <update id="delUnReadCount">
    UPDATE session SET un_read_count = 0 WHERE user_id = #{fromUserId} AND to_user_id = #{toUserId}
  </update>
</mapper>